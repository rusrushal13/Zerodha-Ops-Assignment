---
- hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Change hostname to demo-ops
      hostname:
        name: demo-ops

    - name: add myself to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: "127.0.0.1 localhost demo-ops"
        state: present

    - name: Create docker group
      group: name=docker state=present

    - name: Create demo user account
      user:
        name: demo
        comment: demo account
        uid: 1040
        groups: docker

    - name: configure system settings, file descriptors and number of threads
      pam_limits:
        domain: demo
        limit_type: "{{item.limit_type}}"
        limit_item: "{{item.limit_item}}"
        value: "{{item.value}}"
      with_items:
        - { limit_type: "-", limit_item: "nofile", value: 65536 }
        - { limit_type: "-", limit_item: "nproc", value: 65536 }
        - { limit_type: "soft", limit_item: "memlock", value: unlimited }
        - { limit_type: "hard", limit_item: "memlock", value: unlimited }
    - name: reload settings from all system configuration files
      shell: sysctl --system

    - sysctl:
        name: vm.swappiness
        value: "10"
        state: present

    - name: Set timezone to Asia/Kolkata
      timezone:
        name: Asia/Kolkata

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest
      loop:
        [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "software-properties-common",
          "python3-pip",
          "virtualenv",
          "python3-setuptools",
        ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: name=docker-ce state=latest

    - name: Configure docker daemon
      shell: |
        sudo cp /home/{{ ansible_user }}/go/src/daemon.json /etc/docker/
        sudo service docker start

    - name: update apt and install docker-compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" > /tmp/docker-compose
        sudo mv /tmp/docker-compose /usr/bin/docker-compose
        sudo chmod +x /usr/bin/docker-compose

    - name: Create directory for running the service
      file:
        path: "/etc/demo-ops"
        state: directory

    - name: Deploy files in etc/demo-ops
      shell: |
        sudo cp /home/{{ ansible_user }}/go/src/*go* --target-directory=/etc/demo-ops
        sudo cp /home/{{ ansible_user }}/go/src/Dockerfile --target-directory=/etc/demo-ops
        sudo cp /home/{{ ansible_user }}/go/src/docker-compose.yml --target-directory=/etc/demo-ops
        cd /etc/demo-ops && sudo docker-compose up -d
      become: true
